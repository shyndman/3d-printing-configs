[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  LOG M="Pausing print"
  {% set delta_z = params.Z|default(40)|int %} ; z hop amount

  {% if printer['pause_resume'].is_paused|int == 0 %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=resume_z VALUE={printer.gcode_move.position.z} ; set z hop variable for reference in resume macro
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target} ; set hotend temp variable for reference in resume macro

    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0 ; disable filament sensor
    SAVE_GCODE_STATE NAME=PAUSE ; save current print position for resume
    BASE_PAUSE ; pause print

    DEOOZE

    {% set new_z = printer.gcode_move.position.z + delta_z %}
    {% if new_z > printer.toolhead.axis_maximum.z %} ; check that zhop doesn't exceed z max
      { action_respond_info("Pause zhop exceeds maximum Z height.") } ; if z max is exceeded, show message and set zhop value for resume to 0
      {% set new_z = printer.gcode_move.position.z %}
    {% endif %}

    LOG M="Parking at left, z={new_z}"
    PARK_LEFT Z={new_z}

    # Save parked position in case toolhead is moved during the pause (otherwise
    # the return zhop can error)
    SAVE_GCODE_STATE NAME=PAUSEPARK
    M104 S0 ; Turn off hotend
    SET_IDLE_TIMEOUT TIMEOUT=43200 ; set timeout to 12 hours
  {% else %}
    LOG M="...nothing is printing"
  {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_resume_z: 0
variable_etemp: 0
gcode:
  {% set e = params.E|default(6)|int %} ; hotend prime amount (in mm)

  LOG M="Resuming print"

  {% if printer['pause_resume'].is_paused|int == 1 %}
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1 ; enable filament sensor
    #INITIAL_RGB ; reset LCD color
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    {% if etemp > 0 %}
      M109 S{etemp|int} ; wait for hotend to heat back up
    {% endif %}
    RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100 ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
    {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
      LOG M="Priming nozzle by extruding {e}mm"
      M83 ; relative extruder positioning
      G1 E{e} F1000 ; prime nozzle by E
    {% endif %}

    G90 ; absolute positioning
    G1 Z{resume_z} F1800 ; prime nozzle by E, lower Z back down

    RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=200 ; restore position
    BASE_RESUME ; resume print
  {% else %}
    LOG M="...nothing is paused"
  {% endif %}


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  LOG M="Cancelling print"
  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  PRINT_END
  BASE_CANCEL_PRINT
